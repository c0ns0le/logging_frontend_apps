#
# NGINX configuration for a centralized logging endpoint
# with rate limiting (requests and connections)
# and CORS for easy access from multiple apps
#
#

#
# The maps below are for the CORS configuration
# most of it is aimed at providing a more efficient preflight
#

map $request_method $max_age {
  default "";
  "OPTIONS" 1728000;
}

map $request_method $allowed_methods {
  default "";
  "OPTIONS" 'GET, POST, OPTIONS';
}

map $request_method $allowed_headers {
  default "";
  "OPTIONS" 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
}

map $request_method $custom_content_length {
  default $content_length;
  "OPTIONS" 0;
}

map $request_method $custom_content_type {
  default $content_type;
  "OPTIONS" 'text/plain charset=UTF-8';
}

#
# Define the necessary zones for the limitations
#

limit_req_zone $server_name         zone=req_per_server:10m rate=100r/s;
limit_req_zone $binary_remote_addr  zone=req_per_ip:10m     rate=60r/s;

limit_conn_zone $server_name        zone=conn_per_server:10m;
limit_conn_zone $binary_remote_addr zone=conn_per_ip:10m;

#
# Actual server config
#

upstream logging_service {
    server app:8000;
}
server {

  listen 8088;

  location /log {
    # Our request is proxied to a service
    proxy_pass http://logging_service;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;

    #
    # LIMITATIONS
    #
    limit_except GET POST OPTIONS { # OPTIONS is for preflight in CORS
      deny all;
    }

    # We limit the number of requests
    # TODO Get help from someone used to limit_req, burst and all of that
    limit_req_log_level warn;
    limit_req zone=req_per_ip burst=10;
    limit_req zone=req_per_server nodelay;

    # We limit the number of connections
    limit_conn_log_level warn;
    limit_conn conn_per_ip 4;
    limit_conn conn_per_server 20;

    #
    # CORS
    #

    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Origin' "$http_origin";

    add_header 'Access-Control-Max-Age' $max_age;
    add_header 'Access-Control-Allow-Methods' $allowed_methods;
    add_header 'Access-Control-Allow-Headers' $allowed_headers;
    add_header 'Content-Length' $custom_content_length;
    add_header 'Content-Type' $custom_content_type;

    # "If is evil" (http://wiki.nginx.org/IfIsEvil)
    # Except for return;
    if ($request_method = "OPTIONS") {
      return 204;
    }
  }
}

